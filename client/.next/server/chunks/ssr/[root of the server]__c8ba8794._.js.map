{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/logan/Projects/in-death-tournament/client/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\n\ninterface User {\n    _id: string;\n    username: string;\n    avatar: string;\n    role: string;\n}\n\nexport default function Home() {\n    const [user, setUser] = useState<User | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [newUsername, setNewUsername] = useState(\"\"); // Stores input field value\n    const [saving, setSaving] = useState(false); // Prevents multiple requests\n    const [message, setMessage] = useState(\"\"); // Success/Error messages\n\n    // ✅ Fetch user data initially and after login\n    const fetchUser = async () => {\n        try {\n            const res = await axios.get(\"http://localhost:5000/auth/user\", { withCredentials: true });\n            setUser(res.data);\n            setNewUsername(res.data.username); // Pre-fill username input\n        } catch {\n            setUser(null);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchUser(); // Initial fetch\n\n        // ✅ Check if user was just redirected from login\n        const urlParams = new URLSearchParams(window.location.search);\n        if (urlParams.get(\"loggedIn\")) {\n            fetchUser(); // Fetch user again to update UI\n            window.history.replaceState(null, \"\", window.location.pathname); // Remove query param\n        }\n    }, []);\n\n    const handleLogin = () => {\n        window.location.href = \"http://localhost:5000/auth/google\"; // Redirect to Google login\n    };\n\n    const handleLogout = async () => {\n        await axios.get(\"http://localhost:5000/auth/logout\", { withCredentials: true });\n        setUser(null);\n    };\n\n    // ✅ Handle username update\n    const handleUpdateUsername = async () => {\n        if (!newUsername.trim()) {\n            setMessage(\"Username cannot be empty.\");\n            return;\n        }\n        if (newUsername === user?.username) {\n            setMessage(\"This is already your username.\");\n            return;\n        }\n\n        try {\n            setSaving(true);\n            const res = await axios.put(\n                \"http://localhost:5000/auth/update-username\",\n                { username: newUsername },\n                { withCredentials: true }\n            );\n\n            setMessage(res.data.message);\n            fetchUser(); // Refresh user data after update\n        } catch (err: any) {\n            setMessage(err.response?.data?.message || \"Error updating username.\");\n        } finally {\n            setSaving(false);\n        }\n    };\n\n    if (loading) return <p>Loading...</p>;\n\n    return (\n        <main className=\"flex min-h-screen flex-col items-center justify-center p-10\">\n            <h1 className=\"text-3xl font-bold\">In Death Tournament</h1>\n            <Link href=\"/tournaments\">\n                <button className=\"mt-6 px-4 py-2 bg-blue-500 text-white rounded\">View Tournaments</button>\n            </Link>\n\n            {user ? (\n                <div className=\"mt-4 text-center\">\n                    <p className=\"text-lg\">Welcome, <strong>{user.username}</strong>!</p>\n\n                    {/* ✅ Avatar */}\n                    <img src={user.avatar} alt=\"User Avatar\" className=\"rounded-full w-20 h-20 mt-2 mx-auto\" />\n\n                    {/* ✅ Username Input + Save Button */}\n                    {/* <div className=\"mt-4\">\n                        <input\n                            type=\"text\"\n                            value={newUsername}\n                            onChange={(e) => setNewUsername(e.target.value)}\n                            className=\"border p-2 rounded w-64\"\n                            placeholder=\"Enter new username\"\n                        />\n                        <button\n                            onClick={handleUpdateUsername}\n                            className=\"ml-2 px-4 py-2 bg-green-500 text-white rounded\"\n                            disabled={saving}\n                        >\n                            {saving ? \"Saving...\" : \"Save\"}\n                        </button>\n                    </div> */}\n\n                    {/* ✅ Success/Error Message */}\n                    {message && <p className=\"mt-2 text-blue-500\">{message}</p>}\n\n                    {/* ✅ Logout Button */}\n                    <button onClick={handleLogout} className=\"mt-4 px-4 py-2 bg-red-500 text-white rounded\">\n                        Logout\n                    </button>\n                </div>\n            ) : (\n                <button onClick={handleLogin} className=\"mt-6 px-4 py-2 bg-blue-500 text-white rounded\">\n                    Login with Google\n                </button>\n            )}\n        </main>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAae,SAAS;IACpB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,2BAA2B;IAC/E,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,6BAA6B;IAC1E,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,yBAAyB;IAErE,8CAA8C;IAC9C,MAAM,YAAY;QACd,IAAI;YACA,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,mCAAmC;gBAAE,iBAAiB;YAAK;YACvF,QAAQ,IAAI,IAAI;YAChB,eAAe,IAAI,IAAI,CAAC,QAAQ,GAAG,0BAA0B;QACjE,EAAE,OAAM;YACJ,QAAQ;QACZ,SAAU;YACN,WAAW;QACf;IACJ;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,aAAa,gBAAgB;QAE7B,iDAAiD;QACjD,MAAM,YAAY,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;QAC5D,IAAI,UAAU,GAAG,CAAC,aAAa;YAC3B,aAAa,gCAAgC;YAC7C,OAAO,OAAO,CAAC,YAAY,CAAC,MAAM,IAAI,OAAO,QAAQ,CAAC,QAAQ,GAAG,qBAAqB;QAC1F;IACJ,GAAG,EAAE;IAEL,MAAM,cAAc;QAChB,OAAO,QAAQ,CAAC,IAAI,GAAG,qCAAqC,2BAA2B;IAC3F;IAEA,MAAM,eAAe;QACjB,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,qCAAqC;YAAE,iBAAiB;QAAK;QAC7E,QAAQ;IACZ;IAEA,2BAA2B;IAC3B,MAAM,uBAAuB;QACzB,IAAI,CAAC,YAAY,IAAI,IAAI;YACrB,WAAW;YACX;QACJ;QACA,IAAI,gBAAgB,MAAM,UAAU;YAChC,WAAW;YACX;QACJ;QAEA,IAAI;YACA,UAAU;YACV,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CACvB,8CACA;gBAAE,UAAU;YAAY,GACxB;gBAAE,iBAAiB;YAAK;YAG5B,WAAW,IAAI,IAAI,CAAC,OAAO;YAC3B,aAAa,iCAAiC;QAClD,EAAE,OAAO,KAAU;YACf,WAAW,IAAI,QAAQ,EAAE,MAAM,WAAW;QAC9C,SAAU;YACN,UAAU;QACd;IACJ;IAEA,IAAI,SAAS,qBAAO,8OAAC;kBAAE;;;;;;IAEvB,qBACI,8OAAC;QAAK,WAAU;;0BACZ,8OAAC;gBAAG,WAAU;0BAAqB;;;;;;0BACnC,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;0BACP,cAAA,8OAAC;oBAAO,WAAU;8BAAgD;;;;;;;;;;;YAGrE,qBACG,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAE,WAAU;;4BAAU;0CAAS,8OAAC;0CAAQ,KAAK,QAAQ;;;;;;4BAAU;;;;;;;kCAGhE,8OAAC;wBAAI,KAAK,KAAK,MAAM;wBAAE,KAAI;wBAAc,WAAU;;;;;;oBAqBlD,yBAAW,8OAAC;wBAAE,WAAU;kCAAsB;;;;;;kCAG/C,8OAAC;wBAAO,SAAS;wBAAc,WAAU;kCAA+C;;;;;;;;;;;qCAK5F,8OAAC;gBAAO,SAAS;gBAAa,WAAU;0BAAgD;;;;;;;;;;;;AAMxG","debugId":null}}]
}