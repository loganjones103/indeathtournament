{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/logan/Projects/in-death-tournament/client/src/components/AuthWrapper.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function AuthWrapper({ children }: { children: React.ReactNode }) {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const res = await axios.get(\"http://localhost:5000/auth/user\", { withCredentials: true });\r\n\r\n                if (res.data.roles.includes(\"admin\") || res.data.roles.includes(\"creator\")) {\r\n                    setUser(res.data);\r\n                } else {\r\n                    router.push(\"/\"); // Redirect non-admins\r\n                }\r\n            } catch (error) {\r\n                router.push(\"/\"); // Redirect if not logged in\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchUser();\r\n    }, []);\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n\r\n    return <>{children}</>;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS,YAAY,EAAE,QAAQ,EAAiC;IAC3E,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY;YACd,IAAI;gBACA,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,mCAAmC;oBAAE,iBAAiB;gBAAK;gBAEvF,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY;oBACxE,QAAQ,IAAI,IAAI;gBACpB,OAAO;oBACH,OAAO,IAAI,CAAC,MAAM,sBAAsB;gBAC5C;YACJ,EAAE,OAAO,OAAO;gBACZ,OAAO,IAAI,CAAC,MAAM,4BAA4B;YAClD,SAAU;gBACN,WAAW;YACf;QACJ;QAEA;IACJ,GAAG,EAAE;IAEL,IAAI,SAAS,qBAAO,8OAAC;kBAAE;;;;;;IAEvB,qBAAO;kBAAG;;AACd","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/logan/Projects/in-death-tournament/client/src/components/InputField.tsx"],"sourcesContent":["interface InputFieldProps {\r\n    label: string;\r\n    name: string;\r\n    type?: string;\r\n    value: string;\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport default function InputField({ label, name, type = \"text\", value, onChange }: InputFieldProps) {\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n                className=\"mt-1 p-2 border rounded w-full\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;AAQe,SAAS,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAmB;IAC/F,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAM,WAAU;0BAA2C;;;;;;0BAC5D,8OAAC;gBACG,MAAM;gBACN,MAAM;gBACN,OAAO;gBACP,UAAU;gBACV,WAAU;;;;;;;;;;;;AAI1B","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/logan/Projects/in-death-tournament/client/src/components/SelectField.tsx"],"sourcesContent":["interface SelectFieldProps {\r\n    label: string;\r\n    name: string;\r\n    value: string;\r\n    options: { value: string; label: string }[];\r\n    onChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n}\r\n\r\nexport default function SelectField({ label, name, value, options, onChange }: SelectFieldProps) {\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\r\n            <select\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n                className=\"mt-1 p-2 border rounded w-full\"\r\n            >\r\n                {options.map(opt => (\r\n                    <option key={opt.value} value={opt.value}>{opt.label}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;AAQe,SAAS,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAoB;IAC3F,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAM,WAAU;0BAA2C;;;;;;0BAC5D,8OAAC;gBACG,MAAM;gBACN,OAAO;gBACP,UAAU;gBACV,WAAU;0BAET,QAAQ,GAAG,CAAC,CAAA,oBACT,8OAAC;wBAAuB,OAAO,IAAI,KAAK;kCAAG,IAAI,KAAK;uBAAvC,IAAI,KAAK;;;;;;;;;;;;;;;;AAK1C","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/logan/Projects/in-death-tournament/client/src/components/TextAreaField.tsx"],"sourcesContent":["interface TextAreaFieldProps {\r\n    label: string;\r\n    name: string;\r\n    value: string;\r\n    onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n}\r\n\r\nexport default function TextAreaField({ label, name, value, onChange }: TextAreaFieldProps) {\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700\">{label}</label>\r\n            <textarea\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n                rows={3}\r\n                className=\"mt-1 p-2 border rounded w-full\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;AAOe,SAAS,cAAc,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAsB;IACtF,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAM,WAAU;0BAA2C;;;;;;0BAC5D,8OAAC;gBACG,MAAM;gBACN,OAAO;gBACP,UAAU;gBACV,MAAM;gBACN,WAAU;;;;;;;;;;;;AAI1B","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/logan/Projects/in-death-tournament/client/src/components/TournamentForm.tsx"],"sourcesContent":["// âœ… Updated TournamentForm.tsx\r\n\r\n\"use client\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport axios from \"axios\";\r\nimport InputField from \"./InputField\";\r\nimport SelectField from \"./SelectField\";\r\nimport TextAreaField from \"./TextAreaField\";\r\nimport flatpickr from \"flatpickr\";\r\nimport \"flatpickr/dist/flatpickr.min.css\";\r\n\r\nexport default function TournamentForm() {\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        type: \"high-score\",\r\n        weaponType: \"Any\",\r\n        rules: \"\"\r\n    });\r\n    const [message, setMessage] = useState(\"\");\r\n    const router = useRouter();\r\n\r\n    const startDateRef = useRef<HTMLInputElement>(null);\r\n    const endDateRef = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (startDateRef.current) {\r\n            flatpickr(startDateRef.current, {\r\n                dateFormat: \"Y-m-d\",\r\n                allowInput: true,\r\n                onChange: (selectedDates) => {\r\n                    if (selectedDates.length > 0) {\r\n                        setFormData((prev) => ({ ...prev, startDate: selectedDates[0].toISOString().split(\"T\")[0] }));\r\n                    }\r\n                },\r\n            });\r\n        }\r\n\r\n        if (endDateRef.current) {\r\n            flatpickr(endDateRef.current, {\r\n                dateFormat: \"Y-m-d\",\r\n                allowInput: true,\r\n                onChange: (selectedDates) => {\r\n                    if (selectedDates.length > 0) {\r\n                        setFormData((prev) => ({ ...prev, endDate: selectedDates[0].toISOString().split(\"T\")[0] }));\r\n                    }\r\n                },\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setMessage(\"\");\r\n\r\n        try {\r\n            await axios.post(\"http://localhost:5000/api/tournaments\", formData, {\r\n                withCredentials: true,\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            });\r\n            setMessage(\"Tournament created successfully!\");\r\n            setFormData({\r\n                name: \"\",\r\n                description: \"\",\r\n                startDate: \"\",\r\n                endDate: \"\",\r\n                type: \"high-score\",\r\n                weaponType: \"Any\",\r\n                rules: \"\"\r\n            });\r\n            router.push(\"/tournaments\");\r\n        } catch (err: any) {\r\n            setMessage(\"Error: \" + (err.response?.data?.message || \"Failed to create tournament.\"));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-[#0d1017]\">\r\n            <form onSubmit={handleSubmit} className=\"w-full max-w-lg p-8 bg-[#161b22] shadow-lg rounded-lg border border-gray-700 create-form\">\r\n                <h2 className=\"text-3xl font-bold text-white text-center mb-6\">Create a Tournament</h2>\r\n\r\n                <InputField label=\"Tournament Name\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n                <TextAreaField label=\"Description\" name=\"description\" value={formData.description} onChange={handleChange} />\r\n\r\n                <div className=\"mb-4\">\r\n                    <label className=\"text-gray-700 custom-date\">Start Date</label>\r\n                    <input ref={startDateRef} name=\"startDate\" className=\"mt-1 p-2 border rounded w-full\" readOnly />\r\n                </div>\r\n\r\n                <div className=\"mb-4\">\r\n                    <label className=\"text-gray-700 mt-4 custom-date\">End Date</label>\r\n                    <input ref={endDateRef} name=\"endDate\" className=\"mt-1 p-2 border rounded w-full\" readOnly />\r\n                </div>\r\n\r\n                <SelectField\r\n                    label=\"Tournament Type\"\r\n                    name=\"type\"\r\n                    value={formData.type}\r\n                    onChange={handleChange}\r\n                    options={[{ value: \"high-score\", label: \"High Score\" }]}\r\n                />\r\n\r\n                <SelectField\r\n                    label=\"Weapon Type\"\r\n                    name=\"weaponType\"\r\n                    value={formData.weaponType}\r\n                    onChange={handleChange}\r\n                    options={[\r\n                        { value: \"Bow\", label: \"Bow\" },\r\n                        { value: \"Crossbow\", label: \"Crossbow\" },\r\n                        { value: \"Any\", label: \"Any\" }\r\n                    ]}\r\n                />\r\n\r\n                <TextAreaField label=\"Rules\" name=\"rules\" value={formData.rules} onChange={handleChange} />\r\n\r\n                <button type=\"submit\" className=\"w-full mt-4 py-2 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-600 transition\">\r\n                    Create Tournament\r\n                </button>\r\n\r\n                {message && <p className=\"mt-4 text-center text-white\">{message}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAI/B;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;AAWe,SAAS;IACpB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACrC,MAAM;QACN,aAAa;QACb,WAAW;QACX,SAAS;QACT,MAAM;QACN,YAAY;QACZ,OAAO;IACX;IACA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAC9C,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAE5C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,aAAa,OAAO,EAAE;YACtB,CAAA,GAAA,iJAAA,CAAA,UAAS,AAAD,EAAE,aAAa,OAAO,EAAE;gBAC5B,YAAY;gBACZ,YAAY;gBACZ,UAAU,CAAC;oBACP,IAAI,cAAc,MAAM,GAAG,GAAG;wBAC1B,YAAY,CAAC,OAAS,CAAC;gCAAE,GAAG,IAAI;gCAAE,WAAW,aAAa,CAAC,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;4BAAC,CAAC;oBAC/F;gBACJ;YACJ;QACJ;QAEA,IAAI,WAAW,OAAO,EAAE;YACpB,CAAA,GAAA,iJAAA,CAAA,UAAS,AAAD,EAAE,WAAW,OAAO,EAAE;gBAC1B,YAAY;gBACZ,YAAY;gBACZ,UAAU,CAAC;oBACP,IAAI,cAAc,MAAM,GAAG,GAAG;wBAC1B,YAAY,CAAC,OAAS,CAAC;gCAAE,GAAG,IAAI;gCAAE,SAAS,aAAa,CAAC,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;4BAAC,CAAC;oBAC7F;gBACJ;YACJ;QACJ;IACJ,GAAG,EAAE;IAEL,MAAM,eAAe,CAAC;QAClB,YAAY;YAAE,GAAG,QAAQ;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IAC/D;IAEA,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,WAAW;QAEX,IAAI;YACA,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,yCAAyC,UAAU;gBAChE,iBAAiB;gBACjB,SAAS;oBAAE,gBAAgB;gBAAmB;YAClD;YACA,WAAW;YACX,YAAY;gBACR,MAAM;gBACN,aAAa;gBACb,WAAW;gBACX,SAAS;gBACT,MAAM;gBACN,YAAY;gBACZ,OAAO;YACX;YACA,OAAO,IAAI,CAAC;QAChB,EAAE,OAAO,KAAU;YACf,WAAW,YAAY,CAAC,IAAI,QAAQ,EAAE,MAAM,WAAW,8BAA8B;QACzF;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAK,UAAU;YAAc,WAAU;;8BACpC,8OAAC;oBAAG,WAAU;8BAAiD;;;;;;8BAE/D,8OAAC,gIAAA,CAAA,UAAU;oBAAC,OAAM;oBAAkB,MAAK;oBAAO,OAAO,SAAS,IAAI;oBAAE,UAAU;;;;;;8BAChF,8OAAC,mIAAA,CAAA,UAAa;oBAAC,OAAM;oBAAc,MAAK;oBAAc,OAAO,SAAS,WAAW;oBAAE,UAAU;;;;;;8BAE7F,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,WAAU;sCAA4B;;;;;;sCAC7C,8OAAC;4BAAM,KAAK;4BAAc,MAAK;4BAAY,WAAU;4BAAiC,QAAQ;;;;;;;;;;;;8BAGlG,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,WAAU;sCAAiC;;;;;;sCAClD,8OAAC;4BAAM,KAAK;4BAAY,MAAK;4BAAU,WAAU;4BAAiC,QAAQ;;;;;;;;;;;;8BAG9F,8OAAC,iIAAA,CAAA,UAAW;oBACR,OAAM;oBACN,MAAK;oBACL,OAAO,SAAS,IAAI;oBACpB,UAAU;oBACV,SAAS;wBAAC;4BAAE,OAAO;4BAAc,OAAO;wBAAa;qBAAE;;;;;;8BAG3D,8OAAC,iIAAA,CAAA,UAAW;oBACR,OAAM;oBACN,MAAK;oBACL,OAAO,SAAS,UAAU;oBAC1B,UAAU;oBACV,SAAS;wBACL;4BAAE,OAAO;4BAAO,OAAO;wBAAM;wBAC7B;4BAAE,OAAO;4BAAY,OAAO;wBAAW;wBACvC;4BAAE,OAAO;4BAAO,OAAO;wBAAM;qBAChC;;;;;;8BAGL,8OAAC,mIAAA,CAAA,UAAa;oBAAC,OAAM;oBAAQ,MAAK;oBAAQ,OAAO,SAAS,KAAK;oBAAE,UAAU;;;;;;8BAE3E,8OAAC;oBAAO,MAAK;oBAAS,WAAU;8BAA0G;;;;;;gBAIzI,yBAAW,8OAAC;oBAAE,WAAU;8BAA+B;;;;;;;;;;;;;;;;;AAIxE","debugId":null}}]
}